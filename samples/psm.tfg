#!/usr/bin/env textfrog_su
// list process memory usages
runnable main ( ) {
	ps = [ ]
	filewalk ( "/proc" fn 1 ) {
		--	log(fn)
		p1 = fn . lastIndexOf ( "/" )
		pid = tryNumber ( fn [ p1 + 1 .. ] )
		if pid != null
			cmdline = FileObj ( fn + "/cmdline" ) . isFile ( ) ?
			file ( fn + "/cmdline" ) . trim ( ) . replace ( "\0" " " ) : ""
			status = file ( fn + "/status" )
			f = finder ( status )
			f . find ( "Name:" )
			name = f . readUntil ( "\n" ) . trim ( )
			f . find ( "VmSize:" )
			if f . finished ( ) then continue end --not found
			size0 = tryNumber ( f . readUntil ( "kB" ) . trim ( ) )
			f . find ( "VmRSS:" )
			if f . finished ( ) then continue end --not found
			size = tryNumber ( f . readUntil ( "kB" ) . trim ( ) )
			if size == null then continue end
			ps . add ( array ( name size cmdline pid size0 ) )
		end
	}
	ps . sort ( -> ( a b ) { return a [ 1 ] - b [ 1 ] } )
	ss = [ ]
	ss . add ( "MemRSS(MB)\tMemVM(GB)\tPID\tname\tcmdline" )
	for ( ps p ) {
		ss . add ( format ( "%,d\t%,d\t[%s %s]\t%s" p [ 1 ] / 1024 p [ 4 ] / 1048576 p [ 3 ] p [ 0 ] p [ 2 ] ) )
	}
	log ( ss . join ( "\n" ) )
}
